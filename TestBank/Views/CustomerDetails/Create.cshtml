@model TestBank.Models.CustomerDetail

@{
    ViewBag.Title = "Create";
}

<h3 style="padding:0.5% 30%">ADD CUSTOMER</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-offset-0">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row ">
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.DropDownListFor(model => model.MaritalStatus,ViewBag.Status as  SelectList,"--Select --", new {  @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.ZIPCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @*<select id="ZipcodeDropDown" name="ZIPCode" style="width:166px; height: 33px"></select>*@
                        @Html.DropDownListFor(model => model.ZIPCode, new SelectList(""), new { @id = "ZipcodeDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ZIPCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @*<select id="CitiesDropDown" name="City" style="width:166px; height: 33px"></select>*@
                        @Html.DropDownListFor(model => model.City, new SelectList(""), new { @id = "CitiesDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-1">
                        @*<select id="StateDropDown" name="State" style="width:166px; height: 33px"> </select>*@
                        @Html.DropDownListFor(model => model.State, new SelectList(""), new { @id = "StateDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.DropDownListFor(model => model.Country, ViewBag.Country as SelectList, "-- Select Country --", new { @id = "CountryDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        @* <select id="CountryDropDown" name="Country" style="width: 166px; height: 33px">
                            <option value="-1">--Select Country--</option>
                             @foreach (var country in ViewBag.country)
                              {

                            <option value="@country.CountryCode">@country.CountryName</option>
                               }
                            </select>*@

                    </div>
                </div>
            </div>
        </div>


    </div>
    <br />
    <br />
    <div class="row">
        <div class="col-md-3 col-md-offset-3">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="col-md-4 col-md-offset-0">
            <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("Search","CustomerDetails")'">Cancel</button>
        </div>

    </div>

}





    
    
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#CountryDropDown').on('change', function () {

                var countryId = $('#CountryDropDown option:selected').val();

                $.ajax({
                    type: 'GET',
                    data: { countryId: countryId },
                    url: '@Url.Action("StateList", "CustomerDetails")',
                    success: function (result) {
                        var s = '<option value="-1">--Select States--</option>';
                        for (var i = 0; i < result.length; i++) {
                            s += '<option value= "'+result[i].Id+'"> ' + result[i].Name + '</option > ';
                        }
                        $('#StateDropDown').html(s);
                    }
                });
            });

            $('#StateDropDown').on('change', function () {

                var stateId = $('#StateDropDown option:selected').val();

                $.ajax({
                    type: 'GET',
                    data: { stateId: stateId },
                    url: '@Url.Action("CityList", "CustomerDetails")',
                    success: function (result) {
                        var s = '<option value="-1">Select City</option>';
                        for (var i = 0; i < result.length; i++) {
                            s += '<option value= "' + result[i].Id + '"> ' + result[i].Name + '</option > ';
                        }
                        $('#CitiesDropDown').html(s);

                    }
                });
            });

            $('#CitiesDropDown').on('change', function () {

                var cityId = $('#CitiesDropDown option:selected').val();

                $.ajax({
                    type: 'GET',
                    data: { cityId: cityId },
                    url: '@Url.Action("ZipcodeList", "CustomerDetails")',
                    success: function (result) {
                        var s = '';
                        for (var i = 0; i < result.length; i++) {
                            s += '<option value= "' + result[i].Id + '"> ' + result[i].Id + '</option > ';
                        }
                        $('#ZipcodeDropDown').html(s);

                    }
                });
            });

        });
    </script>
