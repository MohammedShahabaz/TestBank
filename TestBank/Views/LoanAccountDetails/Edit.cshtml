@model TestBank.Models.LoanAccountDetail

@{
    ViewBag.Title = "Edit";
}
<h3 style="padding:1%  30%">LOAN ACCOUNT DETAIL</h3>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row ">
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.AccNum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-3">
                        @Html.EditorFor(model => model.AccNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.AccNum, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-4 ">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanAccountType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-2">
                        @Html.DropDownListFor(model => model.LoanAccountType, ViewBag.Accsubtypes as SelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LoanAccountType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.IFSCcode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.EditorFor(model => model.IFSCcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IFSCcode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <br />


        <div class="row ">
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanIssuedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-3">
                        @Html.EditorFor(model => model.LoanIssuedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoanIssuedDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanPayDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-2">
                        @Html.EditorFor(model => model.LoanPayDate, new { htmlAttributes = new { @id = "DateP", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoanPayDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <br />
        <div class="row ">
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.Principle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-3">
                        @Html.EditorFor(model => model.Principle, new { htmlAttributes = new { @id = "Principle", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Principle, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-2">
                        @Html.EditorFor(model => model.LoanDuration, new { htmlAttributes = new { @id = "Time", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoanDuration, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.RateOfInterest, "Interest", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.EditorFor(model => model.RateOfInterest, new { htmlAttributes = new { @id = "Interest", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RateOfInterest, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


        </div>


        <br />


        <div class="row ">
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.MonthlyPayment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-3">
                        @Html.EditorFor(model => model.MonthlyPayment, new { htmlAttributes = new { @id = "EmiAmt", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MonthlyPayment, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-4 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalLoanAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-6 col-xs-offset-2">
                        @Html.EditorFor(model => model.TotalLoanAmount, new { htmlAttributes = new { @id = "Total", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalLoanAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-3 col-xs-offset-0">
                <div class="form-group">
                    @Html.LabelFor(model => model.BalanceAmount, "Balance", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-8 col-xs-offset-2">
                        @Html.EditorFor(model => model.BalanceAmount, new { htmlAttributes = new { @id = "Balance", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BalanceAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="row ">
            <div class="col-md-3 col-md-offset-2 ">
                <button type="button" class="btn btn-default " onclick=" location.href = '@Url.Action("Search", "CustomerDetails")' ">CANCEL</button>
            </div>

            <div class="col-md-2 col-md-offset-0 ">
                <div class="form-group">
                    <div class="col-md-1 col-md-offset-0 ">
                        <input class="btn btn-default" style="width:100px" id="CalculateBtn" onclick="CalculateInterest()" value="Calculate" />
                    </div>
                </div>
            </div>
            <div class="col-md-2 col-md-offset-1 ">
                <div class="form-group">
                    <div class="col-md-3 col-md-offset-1">
                        <input type="submit" name="calculate" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script>
    function CalculateInterest() {
        var Principle = parseFloat($("#Principle").val());
        var Time = parseInt($("#Time").val());
        var Rate = parseFloat($("#Interest").val());
        //var EmiAmt = parseFloat($("#EmiAmt").val());
        if (Principle == null) {
            $("#Principle").val(null);
            alert("You Have cleared Loan");
        }
        else {

            var R = Rate / (12 * 100);
            var t = Time * 12;
            var top = Math.pow((1 + R), t);
            var bot = top - 1;
            var sp = top / bot;
            var monthly_emi = ((Principle * R) * sp);
            const d = new Date();
            d.toLocaleString('en-US', { timezone: 'Indian/Christmas' });
            d.setFullYear(d.getFullYear() + Time);
            var nd=d.toISOString().slice(0, 10);
            monthly_emi = monthly_emi.toFixed(2);
            $("#Total").val(monthly_emi *12);
            $("#EmiAmt").val(monthly_emi);
            $("#Balance").val(monthly_emi * 12);
            $("#DateP").val(nd);
        }

    }
</script>

