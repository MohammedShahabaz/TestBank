@model TestBank.Models.SavingAccountTxnHistory

@{
    ViewBag.Title = "Create";
}

<h3 style="padding:0.5% 40%">DEPOSIT</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal col-md-offset-3">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.TxnDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TxnDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = DateTime.Now.ToString("yyyy'-'MM'-'dd"), @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TxnDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccNum, "AccNum", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AccNum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SourceType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SourceType, new { htmlAttributes = new { @class = "form-control", @Value = "To Bank", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.SourceType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TransType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TransType, new { htmlAttributes = new { @class = "form-control", @Value = "Deposit", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TransType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="row ">
        <div class="col-md-2 col-md-offset-2 ">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Deposit" class="btn btn-default" />
                </div>
            </div>
        </div>
            <div class="col-md-3 ">
                <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("Details", "SavingAccountDetails", new { id = ViewBag.AccNum })'">Back</button>
            </div>
        </div>
    </div>
    }
